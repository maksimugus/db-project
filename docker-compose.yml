version: '3.5'

name: "db_project"

services:
  postgres:
    image: postgres:14.3-alpine
    container_name: db_kinopoisk
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
      - ./migrations:/migrations
    env_file:
      - .env
  
  python:
    image: python:3.11-alpine
    container_name: faker
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /tmp/source
    volumes:
      - ./data_generation:/tmp/source
    restart: "on-failure"
    command: ["sh", "-c", "cd /tmp/source && pip install -r requirements.txt && python main.py"]
    env_file:
      - .env